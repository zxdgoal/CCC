package uk.ac.ncl.dao;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;

import uk.ac.ncl.user.User;
import uk.ac.ncl.model.Operation;
import uk.ac.ncl.resource.Resources;
import uk.ac.ncl.rop.Obligation;
import uk.ac.ncl.rop.Prohibition;
import uk.ac.ncl.rop.Right;
import uk.ac.ncl.status.*;

public class UserManagerImpl implements UserManager
{
	@PersistenceContext(unitName = "RopePU")
	private EntityManager em;

	public UserManagerImpl()
	{
		em = Resources.getEntityManager();
	}
	
	@Override
	public void store(User user)
	{
		em.persist(user);
	}

	@Override
	public User query(String name)
	{
		try
		{
			final String jpaQlQuery = "SELECT e FROM "
					+ User.class.getSimpleName() + " e WHERE e.name=:name";
			Query q = em.createQuery(jpaQlQuery);
			q.setParameter("name", name);
			User user= (User) q.getSingleResult();
			return user;
		}
		catch (Exception e)
		{
			e.printStackTrace();
			return null;
		}
	}

	@Override
	public void remove(User user)
	{
		em.remove(user);

	}

	@Override
	public void changeRight(User user, Operation operation, RightStatus oldStatus, RightStatus newStatus)
	{
		List<Right> userRight = user.getRight();
		Right right = new Right(operation, oldStatus);
		for (Right result : userRight)
		{
			if (right.equals(result))
			result.setStatus(newStatus);
		}
	}

	@Override
	public void changeObligation(User user, Operation operation, ObligationStatus oldStatus, ObligationStatus newStatus)
	{
		List<Obligation> userObligation = user.getObligation();
		Obligation obligation = new Obligation(operation, oldStatus);
		for (Obligation result : userObligation)
		{
			if (obligation.equals(result))
		    result.setStatus(newStatus);
		}
	}

	@Override
	public void changeProhibition(User user, Operation operation, ProhibitionStatus oldStatus,ProhibitionStatus newStatus)
	{
		List<Prohibition> userProhibition = user.getProhibiton();
		Prohibition prohibition = new Prohibition(operation, oldStatus);
		for (Prohibition result : userProhibition)
		{
			if (prohibition.equals(result))
				result.setStatus(oldStatus);
		}
	}

	@Override
	public boolean matchRight(User user, Operation operation, RightStatus status)
	{
		List<Right> userRight = user.getRight();
		Right right = new Right(operation, status);
		for (Right result : userRight)
		{
			if (right.equals(result))
				return true;
		}
		return false;
	}

	@Override
	public boolean matchObligation(User user, Operation operation,
			ObligationStatus status)
	{
		List<Obligation> userObligation = user.getObligation();
		Obligation obligation = new Obligation(operation, status);
		for (Obligation result : userObligation)
		{
			if (obligation.equals(result))
				return true;
		}
		return false;
	}

	@Override
	public boolean matchProhibition(User user, Operation operation,
			ProhibitionStatus status)
	{
		List<Prohibition> userProhibition = user.getProhibiton();
		Prohibition prohibition = new Prohibition(operation, status);
		for (Prohibition result : userProhibition)
		{
			if (prohibition.equals(result))
				return true;
		}
		return false;
	}

}
