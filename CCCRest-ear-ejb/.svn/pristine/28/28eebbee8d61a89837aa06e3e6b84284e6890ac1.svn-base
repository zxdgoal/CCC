package uk.ac.ncl.event;

import javax.persistence.Embeddable;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;

@Embeddable
public class Operation 
{
    @Enumerated(EnumType.STRING)
    private Name name;
    
    private String object;
   
    private String type;
    
    public Operation(Name name, String type, String object)
    {
    	this.name = name;
    	this.type = type;
    	this.object = object;
    }
    
    public Operation()
    {
    	
    }
    
	public enum Name
	{
	store, remove, addDependency, update, retrieve,
	storeSuccess, removeSuccess, addDependencySuccess, updateSuccess, retrieveSuccess, 
	storeFail, removeFail, addDependencyFail, updateFail, retrieveFail;
	}

	public Name getName()
	{
		return name;
	}

	public String getObject()
	{
		return object;
	}

	public String getType()
	{
		return type;
	}
	
	@Override
	public String toString()
	{
		return name+" "+ type+" "+ object;
	}
	
	@Override
	public boolean equals(Object obj)
	{
		if (this == obj)
			return true;
		if(!(obj instanceof Operation))
			return false;
		Operation operation = (Operation)obj;
		return (name == null ? operation.name == null : name.equals(operation.name))
				&& (operation == null ? operation.object == null : operation
						.equals(operation.object))
				&& (type == null ? operation.type == null : type.equals(operation.type));
		
	}
}
