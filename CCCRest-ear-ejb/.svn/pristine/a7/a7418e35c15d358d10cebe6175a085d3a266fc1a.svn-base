package uk.ac.ncl.event;

import javax.persistence.Embeddable;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;

@Embeddable
public class Operation 
{
    @Enumerated(EnumType.STRING)
    private OperationName name;
    
    private String object;
   
    private String type;
    
    public Operation(OperationName name, String type, String object)
    {
    	this.name = name;
    	this.type = type;
    	this.object = object;
    }
    
    public Operation()
    {
    	
    }
    
	public enum OperationName
	{
	store, remove, addDependency, update, retrieve,
	}

	public OperationName getName()
	{
		return name;
	}

	public String getObject()
	{
		return object;
	}

	public String getType()
	{
		return type;
	}
	
	public void setName(OperationName name)
	{
		this.name = name;
	}

	public void setObject(String object)
	{
		this.object = object;
	}

	public void setType(String type)
	{
		this.type = type;
	}

	@Override
	public String toString()
	{
		return name+" "+ type+" "+ object;
	}
	
	@Override
	public boolean equals(Object obj)
	{
		if (this == obj)
			return true;
		if(!(obj instanceof Operation))
			return false;
		Operation operation = (Operation)obj;
		return (name == null ? operation.name == null : name.equals(operation.name))
				&& compare(object,operation.object)
				&& compare(type, operation.type);
		
	}
	
	private boolean compare(String one, String two)
	{
		final String Anyone= "ANYONE";
		if (one == null)
			return two == null;
		if (two == null)
			return one == null;
		if (one.equals(Anyone)||two.equals(Anyone))
			return true;
		return one.equals(two);
	}
}
